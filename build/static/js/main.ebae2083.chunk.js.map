{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/aux/aux.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","axios/axiosOrders.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/Burgeringredient/BurgerIngredient.js","components/Burger/Burger.js","assests/images/burger-logo.png","components/UI/Logo/Logo.js","components/Navigation/SideDrawer/SideDrawerToggle/SideDrawerToggle.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BuildControl/BuildControl.js","components/Burger/BurgerControls/BurgerControls.js","components/UI/OrdersSummary/OrderSummary.js","components/UI/AlertMessage/AlertMessage.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asycComponent/asyncComponent.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["REMOVE_INGREDIENT","ADD_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_SUCCESS","PURCHASE_INIT","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_SET_REDIRECT_PATH","addIngredient","value","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","message","errorMessage","purchaseBurger","orderData","token","axiosOrders","post","purchaseBurgerSuccess","purchaseBurgerFail","id","orderID","fetchOrders","userId","fetchOrdersStart","queryParams","orders","key","push","Id","fetchOrdersSuccess","err","fetchOrdersFail","Authenticate","email","password","isSignUp","AuthStart","authData","returnSecureToken","url","axois","experationDate","Date","getTime","expiresIn","localStorage","setItem","idToken","localId","CheckAuthTimeout","AuthSuccess","AuthFail","authSetRedirectPath","path","redirectPath","Logout","removeItem","timePeriod","setTimeout","AuthCheckState","getItem","backdrop","props","show","className","onClick","clicked","Modal","this","orderClicked","style","width","height","transform","opacity","children","Component","aux","button","disabled","buttonclass","join","spinner","ordersInstance","create","baseURL","mode","headers","withErrorHandler","WrappedComponent","errorAcknowledgedHandler","setState","didError","state","interceptors","request","use","req","res","eject","reqInterceptor","resInterceptor","border","backgroundColor","BurgerIngredient","burgerIngredient","Burger","burgerIngredients","Object","keys","map","ingredientKey","Array","_","i","flat","length","module","exports","logo","src","BurgerLogo","alt","sideDrawerToggle","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","isAuthenticated","toolbar","showdrawer","SideDrawer","attachedClasses","open","Backdrop","sideDrawerClick","Layout","showSideDrawer","sideDrawerCloseHandler","sideDrawerToggleHandler","prevState","connect","auth","buildControl","label","remove","add","controls","BurgerControls","price","ctrl","ingredientAdded","ingredientsRemoved","disabledInfo","purchasable","ordered","isAuthenticate","igKey","textTransform","totalprice","Button","continued","canceled","AlertMessage","timeup","hideAlertMessage","duration","miliseconds","Number","alertmessage","classes","BurgerBuilder","totalPrice","purchased","showAlert","updatePurchasableHandler","reduce","sum","el","handlePurchase","onAuthRedirectPath","history","handlePurchaseCanceled","handlePurchaseContinued","onInitIngredients","alertMsg","ingred","burger","Spinner","orderSummary","toFixed","onIngredientAdded","onIngredientRemoved","loading","burgerBuilder","ingredName","actions","onLogout","asyncComponent","importedComponenent","component","cmp","default","asyncCheckout","asyncOrders","asyncAuth","App","onAutoLogin","routes","withRouter","Boolean","window","location","hostname","match","updateObject","oldstate","updatedPropertes","PRICES","cheese","meat","salad","bacon","initialState","building","Reducer","action","updatedProperties","updatedRemoveProperties","updatedSetProperties","updatedErrorProperties","initPurchase","ruducer","newOrder","concat","initailState","authStart","authSuccess","authFail","authLogout","authRedirectPath","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","order","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.ebae2083.chunk.js","sourcesContent":["export const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\"\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\"\nexport const INCREASE_PRICE = \"INCREASE_PRICE\"\nexport const DECREASE_PRICE = \"DECREASE_PRICE\"\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\"\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\"\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\"\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\"\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\"\nexport const PURCHASE_INIT = \"PURCHASE_INIT\"\nexport const FETCH_ORDER_START = \"FETCH_ORDER_START\"\nexport const FETCH_ORDER_SUCCESS = \"FETCH_ORDER_SUCCESS\"\nexport const FETCH_ORDER_FAIL = \"FETCH_ORDER_FAIL\"\nexport const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\nexport const AUTH_SET_REDIRECT_PATH = \"AUTH_SET_REDIRECT_PATH\"","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\nexport const addIngredient = (value) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName : value\n    }\n}\n\nexport const removeIngredient = (value) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName : value\n    }\n}\n\nexport const fetchIngredientsFailed = (message) => {\n    return {\n        type : actionTypes.FETCH_INGREDIENTS_FAILED,\n        errorMessage : message\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type : actionTypes.SET_INGREDIENTS,\n        ingredients : ingredients\n    }\n}\n// asycronous Ingredient action creator\nexport const initIngredients = () => {\n    return dispatch  => {\n        axios.get('https://react-burger-bead9.firebaseio.com/ingredients.json')\n        .then( response => {\n            dispatch( setIngredients(response.data) )\n        })\n        .catch( error => {\n            dispatch( fetchIngredientsFailed(error) )\n        })\n    }\n}\n","import axiosOrders from '../../axios/axiosOrders'\nimport * as actionTypes from '../actions/actionTypes'\n\n\nexport const purchaseInit = () => {\n    return {\n        type : actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type : actionTypes.PURCHASE_BURGER_START\n    }\n}\n\n\n// asyncronous Order Action creators\nexport const  purchaseBurger = (orderData , token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() )\n        axiosOrders.post( \"/orders.json?auth=\" + token, orderData )\n        .then( response => {\n            dispatch( purchaseBurgerSuccess(response.data , orderData) )\n            dispatch( purchaseInit( ))\n        })\n        .catch( error => {\n            dispatch( purchaseBurgerFail(error) )\n        })\n    }\n}\n// syncronous Order action creator\nexport const purchaseBurgerSuccess = ( id , orderData ) => {\n    return {\n        type : actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderID : id,\n        orderData : orderData\n    }\n}\n// sycronous \nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type : actionTypes.PURCHASE_BURGER_FAIL,\n        error : error\n    }\n}\n\n// Action creators for the Orders page\nexport const fetchOrders = ( token , userId ) => {\n    return dispatch => { \n        dispatch( fetchOrdersStart() )\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\n        axiosOrders.get( 'orders.json' + queryParams )\n        .then( response => {\n            // reponse.data = { key{ key : data} , key{ key : data} }\n            const orders = [];\n            for(let key in response.data){\n                orders.push({\n                Id :key,\n                ...response.data[key]\n                });\n            }\n            dispatch( fetchOrdersSuccess(orders) )\n        })\n        .catch( err => {\n            dispatch( fetchOrdersFail(err) )\n        })\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDER_START\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDER_SUCCESS,\n        orders : orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type : actionTypes.FETCH_ORDER_FAIL,\n        error : error\n    }\n}\n","import * as actionTypes from '../actions/actionTypes'\nimport axois from 'axios'\n\nexport const Authenticate = ( email , password , isSignUp ) => {\n    return dispatch => {\n        dispatch( AuthStart() )\n        const authData = {\n            email,\n            password,\n            returnSecureToken : true\n        }\n        // conditional URL \n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAvvRz3czE_pcBGVwjFeN8q3CoRVii4SYY\"\n        if( !isSignUp ) url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAvvRz3czE_pcBGVwjFeN8q3CoRVii4SYY\"\n        // authenticate\n        axois.post( url , authData )\n        .then( response => {\n            const experationDate = new Date( new Date().getTime() + response.data.expiresIn * 1000)\n            localStorage.setItem('experationDate', experationDate)\n            localStorage.setItem('token', response.data.idToken)\n            localStorage.setItem('userId', response.data.localId)\n\n            dispatch( CheckAuthTimeout( response.data.expiresIn ) )\n            dispatch( AuthSuccess(response.data.idToken , response.data.localId) )\n        } )\n        .catch( error => {\n            dispatch( AuthFail(error) )\n        })\n    }\n}\n\nexport const authSetRedirectPath = ( path ) => {\n    return {\n        type : actionTypes.AUTH_SET_REDIRECT_PATH,\n        redirectPath : path\n    }\n}\n\nexport const Logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('experationDate')\n    localStorage.removeItem('userId')\n\n    return {\n        type : actionTypes.AUTH_LOGOUT,\n    }\n}\n\nexport const CheckAuthTimeout = ( timePeriod ) => {\n    return dispatch => {\n            setTimeout(  \n                () => dispatch( Logout() ) \n                , timePeriod * 1000)\n        } \n}\n\nconst AuthStart = () => { \n    return {\n        type : actionTypes.AUTH_START\n    }\n}\n\nconst AuthSuccess = ( idToken , userId ) => { \n    return {\n        type : actionTypes.AUTH_SUCCESS,\n        userId : userId,\n        idToken : idToken\n    }\n}\n\nconst AuthFail = ( error ) => { \n    return {\n        type : actionTypes.AUTH_FAIL,\n        error : error\n    }\n}\n\nexport const AuthCheckState = ( ) => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if( !token ){\n            dispatch( Logout() )\n        }else{\n            const userId = localStorage.getItem('userId')\n            const experationDate = new Date(localStorage.getItem('experationDate'))\n            if( experationDate <= new Date() ){\n                dispatch( Logout() )\n            }else{\n                dispatch( AuthSuccess( token, userId ) )\n                // the difference will be the expiry Date\n                dispatch( CheckAuthTimeout(experationDate.getTime() - new Date().getTime() / 1000 ) )\n            }\n    \n        }\n    }\n}","import React from 'react';\nimport './Backdrop.css';\n\nconst backdrop = (props) =>  (\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React,{Fragment, Component} from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport './Modal.css';\n\n\nclass Modal extends Component {\n    \n    // shouldComponentUpdate( nextProps , nextState){\n    //     return this.props.show !== nextProps.show || this.props.children !== nextProps.children\n    // }\n\n    componentDidUpdate(){\n        \n    }\n\n    render(){\n        return(\n            <Fragment>\n                <Backdrop  show={this.props.show} clicked={this.props.orderClicked}/>\n                <div className=\"Modal\" style={{ \n                                        width : this.props.width ,\n                                        height: this.props.height,\n                                        transform: this.props.show ? 'translateY(0)' : 'translateY(-150vh)',\n                                        opacity : this.props.show ? '1': '0'\n                                    }}>\n                {this.props.children}\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default Modal;\n    ","\nconst aux = (props) => { \n    return props.children;\n}\n\nexport default aux;","import React from 'react';\nimport './Button.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[\"Button\" ,props.buttonclass].join(\" \")}\n        style={{ width: props.width }}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"Loader\">\n\n    </div>\n);\n\nexport default spinner;","import axios from 'axios';\n\nconst ordersInstance = axios.create({\n    baseURL : \"https://react-burger-bead9.firebaseio.com\",\n    mode: 'no-cors',\n    headers: { \n        'Access-Control-Allow-Origin' : '*',\n        //'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n      }\n});\n\nexport default ordersInstance;\n\n","import React, { Component } from 'react';\nimport Aux from '../aux/aux';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent,axios) => {\n    return class extends Component{\n        constructor(props){\n            super(props);\n            this.state = {\n                error : null,\n                didError : false\n            }\n        }\n\n        componentWillMount() {\n            // the request must return something\n            axios.interceptors.request.use( req => {\n                this.setState({error: null , didError : false});\n                return req;\n            });\n            // the response must return something\n             axios.interceptors.response.use( res => res , err => {\n                this.setState({error:err, didError: true});\n            });\n        }\n        // now to prevent creating multiple interceptors and stop memory leaks \n        // we are going to eject the once the compoenent we wrap is unmounted\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorAcknowledgedHandler = () => {\n            this.setState({error : null, didError: false});\n        }\n\n        render(){\n            return (\n                <Aux style={{height: '100%' , border : 'solid 1px red', backgroundColor: 'salmon'}}>\n                    <Modal \n                        height=\"10%\" \n                        width=\"70%\" \n                        show={this.state.didError} \n                        orderClicked={this.errorAcknowledgedHandler}>\n                    {this.state.didError ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n            );\n        };\n    }\n}\n\nexport default withErrorHandler;","import React, {Component} from 'react';\nimport './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n\n    render(){\n        let burgerIngredient = null;\n        switch(this.props.type){\n            case('cheese'):\n                burgerIngredient = <div className=\"Cheese\"></div>;\n                break;\n            case('meat'):\n                burgerIngredient = <div className=\"Meat\"></div>;\n                break;\n            case('salad'):\n                burgerIngredient = <div className=\"Salad\"></div>;\n                break;\n            case('bacon'):\n                burgerIngredient = <div className=\"Bacon\"></div>;\n                break;\n            case('bread-bottom'):\n                burgerIngredient = <div className=\"BreadBottom\"></div>;\n                break;\n            case('bread-top'):\n                burgerIngredient =  <div className=\"BreadTop\">\n                                        <div className=\"Seeds1\"></div>\n                                        <div className=\"Seeds2\"></div> \n                                    </div>;\n                break;\n            default :\n                burgerIngredient = null;\n        }\n\n        return burgerIngredient;\n    }\n\n   \n}\n\nBurgerIngredient.propTypes = {\n    type : PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React, { Component } from 'react';\nimport BurgerIngredient from './Burgeringredient/BurgerIngredient';\nimport './Burger.css';\n\n\nclass Burger extends Component {\n\n    componentDidUpdate(){\n        \n    }\n\n    render(){\n\n        let burgerIngredients = Object.keys(this.props.ingredients).map(\n            ingredientKey =>  [...Array(this.props.ingredients[ingredientKey])].map(\n                (_,i) => {\n                    return <BurgerIngredient type={ingredientKey} key={ ingredientKey + i }/>\n                }\n            )).flat(); // flatten nested array to do length check\n\n        burgerIngredients = burgerIngredients.length < 1 ? <div>PLease select Ingredient</div> : burgerIngredients;\n\n        return(\n            <div className=\"Burger\">\n                <BurgerIngredient type=\"bread-top\"/>\n                {burgerIngredients}\n                <BurgerIngredient type=\"bread-bottom\"/>\n            </div>\n        )\n\n    }\n}\n\nexport default Burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from  'react';\nimport BurgerLogo from '../../../assests/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className=\"BurgerLogo\">\n        <img src={BurgerLogo} alt=\"BurgerLogo\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport './SideDrawerToggle.css';\n\nconst sideDrawerToggle = (props) => (\n    <div className=\"SideDrawerToggle\" onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\n\nexport default sideDrawerToggle;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './NavigationItem.css';\n\n// the to prop determins what link has the active property \n// and if the link has that class the styles are activated by the css\nconst NavigationItem = (props) => (\n    <li className=\"NavigationItem\">\n        <NavLink to={props.link} exact\n                 activeClassName={props.active}>\n              {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default NavigationItem;","import React from 'react';\nimport NavigationItem from '../NavigationItem/NavigationItem';\nimport './NavigationItems.css';\n\nconst NavigationItems = (props) => (\n    <ul className=\"NavigationItems\">\n        <NavigationItem link=\"/\" >Burger Builder</NavigationItem>\n        {\n            props.isAuthenticated ? \n            <NavigationItem  link=\"/orders\" >Orders</NavigationItem> :\n            null \n        }\n        {\n            props.isAuthenticated ?\n            <NavigationItem  link=\"/logout\">Logout</NavigationItem> :\n            <NavigationItem  link=\"/auth\">Authenticate</NavigationItem> \n        }\n        \n    </ul>\n);\n\nexport default NavigationItems;","import React from 'react';\nimport BurgerLogo from '../../UI/Logo/Logo';\nimport SideDrawerToggle from '../SideDrawer/SideDrawerToggle/SideDrawerToggle';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './Toolbar.css';\n\nconst toolbar = (props) => (\n    <div className=\"Toolbar\">\n        <SideDrawerToggle clicked={props.showdrawer}/>\n        <div className=\"ToolBarLogo\">\n            <BurgerLogo />\n        </div>\n        <nav className=\"DesktopOnly\">\n            <ul>\n                <NavigationItems  isAuthenticated={props.isAuthenticated} />\n            </ul>\n        </nav>\n    </div>\n);\n\nexport default toolbar;","import React ,{Fragment}from 'react';\nimport Logo from '../../UI/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport './SideDrawer.css';\n\nconst SideDrawer = (props) => {\n    // conditional css\n    const attachedClasses = props.open ? [\"SideDrawer\",\"Open\"] : [\"SideDrawer\",\"Close\"];\n    return (\n        <Fragment>\n            <Backdrop show={props.open} clicked={props.sideDrawerClick}/>\n            <div className={attachedClasses.join(\" \")} onClick={props.sideDrawerClick}>\n                <div className=\"SideDrawerLogo\">\n                    <Logo/>\n                </div>\n                <nav>\n                    <NavigationItems  isAuthenticated={props.isAuthenticated}/>\n                </nav>\n            </div>\n        </Fragment> \n    );\n}\n\nexport default SideDrawer;","import React , {Fragment, Component } from 'react';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux'\nimport  './Layout.css';\n\nclass Layout extends Component{\n    state ={\n        showSideDrawer : false\n    }\n\n    sideDrawerCloseHandler = () => {\n        this.setState({ showSideDrawer :false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer : !prevState.showSideDrawer }\n        });\n    }\n\n    render(){\n        return (\n            <Fragment>\n            <Toolbar\n                showdrawer={this.sideDrawerToggleHandler}\n                 isAuthenticated={this.props.isAuthenticated} />\n\n                <SideDrawer \n                    open={this.state.showSideDrawer} \n                    sideDrawerClick={this.sideDrawerCloseHandler}\n                    isAuthenticated={this.props.isAuthenticated} />\n\n                <main className=\"Content\">\n                    {this.props.children}\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated : state.auth.token !== null\n    }\n}\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport './BuildControl.css';\n\n\nconst buildControl = (props) => {\nreturn (\n    <div className=\"BuildControl\">\n        <div className=\"Label\">{props.label}</div>\n        <button \n            className=\"Less\"\n            onClick={props.remove}\n            disabled={props.disabled}>Less\n        </button>\n        <button \n            className=\"More\"\n            onClick={props.add}>More\n        </button>\n    </div>    \n    );\n}\n\nexport default buildControl;","import React from 'react';\nimport './BurgerControls.css';\nimport BurgerControl from '../BuildControl/BuildControl';\n\nconst controls = [\n    {label : \"Meat\" , type : \"meat\"},\n    {label : \"Cheese\" , type : \"cheese\"},\n    {label : \"Bacon\" , type : \"bacon\"},\n    {label : \"Salad\" , type : \"salad\"}\n]\n\nconst BurgerControls = (props) =>  {\n\n        return (\n            <div className=\"BuildControls\">\n                <p> Burger Price :<strong>{ \"R \"  + props.price}</strong></p>\n                {controls.map( ctrl => <BurgerControl\n                                            add={() => props.ingredientAdded(ctrl.type)}\n                                            remove={() => props.ingredientsRemoved(ctrl.type)} \n                                            disabled={props.disabledInfo[ctrl.type]}\n                                            label={ctrl.label} \n                                            key={ctrl.label}/> )}\n                <button className=\"OrderButton\"\n                    disabled={!props.purchasable}\n                    onClick={props.ordered}>\n                        {props.isAuthenticate ? 'ORDER NOW' : 'SIGN IN TO ORDER'}\n                </button>                            \n            </div>\n            \n        );  \n}\n\nexport default BurgerControls;","import React from 'react';\nimport './OrderSummary.css';\nimport Button from '../Button/Button';\n\n\nconst backdrop = (props) => {\n\n    const ingredients = Object.keys(props.ingredients)\n    .map( igKey => {\n        return  <li className=\"ListItem\" key={igKey}>\n                    <span className=\"Span\" style={{textTransform: \"capitalize\"}}>{igKey}</span> :{props.ingredients[igKey]}\n                </li>;\n    })\n\n    return (\n        <div>\n            <h3>Order Summary</h3>\n            <p>Delicious Burger Containing the following ingredients</p>\n            <ul>\n                {ingredients}\n            </ul>\n            <p><strong>Total Price : {props.totalprice}</strong></p>\n            <p>Continue to checkout ?</p>\n            <Button \n                className=\"Button\"\n                width=\"70px\" \n                buttonclass=\"Success\"\n                clicked={props.continued}>Yes\n            </Button>\n            <Button\n                className=\"Button\"\n                width=\"70px\"\n                buttonclass=\"Danger\"\n                clicked={props.canceled}>Cancel\n            </Button>\n        </div>\n    );\n}\n\nexport default backdrop;","import React, { Component } from 'react';\nimport './AlertMessage.css';\n\nclass AlertMessage extends Component {\n    state = {\n        timeup : false\n    }\n\n    componentDidMount() {\n       this.hideAlertMessage(this.props.duration);\n    }\n\n    // hideAlertMessage is responsible for hiding the alert message\n    // the duration(seconds) prop must be passed to the Alert Component\n    // propType = s[ string or number ]\n    hideAlertMessage = (duration) => {\n        // TODO : rather change the class to hide the message\n        const miliseconds = Number(duration) * 1000\n        setTimeout( () => this.setState({timeup: true}), miliseconds);\n    }\n\n    render(){\n        let alertmessage= <div className={this.props.classes}>\n                                {this.props.message}\n                            </div>;\n\n        if(this.state.timeup){\n            alertmessage = null;\n        }\n\n        return (\n            <div className={\"AlertMessage \"}>\n                {alertmessage}\n            </div>\n        );\n    }\n    \n}\n\nexport default AlertMessage;","import React ,{Component} from'react';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrdersSummary from '../../components/UI/OrdersSummary/OrderSummary';\nimport axios from 'axios';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index'\nimport Aux from '../../hoc/aux/aux';\nimport AlertMessage from '../../components/UI/AlertMessage/AlertMessage';\nimport {connect} from 'react-redux';\nimport './BurgerBuilder.css';\n// exporting the class without the connection to redux for testing purposes\nexport class BurgerBuilder extends Component {\n\n    state = {\n        totalPrice : 4,\n        purchasable : false,\n        purchased : false,\n        showAlert : false\n    }\n    \n    componentDidMount() {\n        this.props.onInitIngredients()\n \n    }\n\n    updatePurchasableHandler = (ingredients) => {\n        const sum =  Object.keys(ingredients)\n                            .map( igKey => {\n                                return ingredients[igKey];\n                            })\n                            .reduce((sum , el) => {\n                                return sum + el;\n                            },0)\n        // we cater for the HTML disabled attribute \n        return sum > 0 \n        \n    }\n\n    \n    handlePurchase = () => {\n        if( this.state.handlePurchase ){\n            this.setState({purchased : true});\n        }else{\n            this.props.onAuthRedirectPath('/checkout')\n            this.props.history.push('/auth')\n        }\n        \n    }\n\n    handlePurchaseCanceled = () => {\n        this.setState({purchased : false});\n    }\n\n    handlePurchaseContinued = () => {   \n        this.props.history.push('/checkout');\n    }\n\n    render(){\n        let alertMsg = null;\n        if(this.state.showAlert) alertMsg=  <AlertMessage \n                                                duration=\"5\"\n                                                message=\"Order Saved Successfully\"\n                                                classes=\"AlertMessageSuccess\"\n                                            />;\n        // for the less and more Buttons\n        const disabledInfo = {...this.props.ingred}\n\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        // prefer to handle null ingredients before we get the ingredients from firebase here \n        // its better than doing in in another components\n        let burger = this.props.error ? <p>Error fetching Ingredients</p> :<Spinner />;\n        \n        let orderSummary = null\n        if( this.props.ingred ){\n            burger= (<Aux>\n                        <Burger \n                            ingredients={this.props.ingred} />\n                        <BurgerControls\n                            isAuthenticate={this.props.isAuthenticate}\n                            price={this.props.price.toFixed(2)}\n                            purchasable={this.updatePurchasableHandler(this.props.ingred)} \n                            disabledInfo={disabledInfo} \n                            ingredientAdded={this.props.onIngredientAdded} \n                            ingredientsRemoved={this.props.onIngredientRemoved}\n                            ordered={this.handlePurchase} />\n                    </Aux>);\n                    \n            orderSummary = <OrdersSummary\n                                continued={this.handlePurchaseContinued}\n                                canceled={this.handlePurchaseCanceled} \n                                ingredients={this.props.ingred}\n                                totalprice={this.props.price.toFixed(2)} />;\n        }\n           \n        if (this.state.loading) orderSummary = <Spinner />;\n        \n        return(\n            <div className=\"BurgerBuilder\">\n                {alertMsg}\n                <Modal  \n                    width=\"60%\" \n                    show={this.state.purchased} \n                    orderClicked={this.handlePurchaseContinued}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingred : state.burgerBuilder.ingredients ,\n        price : state.burgerBuilder.totalPrice ,\n        error : state.burgerBuilder.error,\n        isAuthenticate : state.auth.token !== null\n    }\n}\n\nconst mapActionsToProps = dispatch => {\n    return {\n        onIngredientAdded : (ingredName) => dispatch( actions.addIngredient(ingredName)),\n        onIngredientRemoved : (ingredName) => dispatch( actions.removeIngredient(ingredName)),\n        onInitIngredients : () => dispatch( actions.initIngredients() ),\n        onAuthRedirectPath : (path) => dispatch( actions.authSetRedirectPath( path ))\n     \n    }\n}\n\nexport default connect(mapStateToProps,mapActionsToProps)(withErrorHandler(BurgerBuilder,axios));","import React ,{ Component} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../store/actions/index'\n\n\nclass Logout extends Component {\n\n    componentDidMount(){\n        this.props.onLogout()\n    }\n\n    render(){\n        return <Redirect to=\"/auth\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout : () => dispatch( actions.Logout())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(Logout)","import React, { Component } from 'react'\n\nconst  asyncComponent = ( importedComponenent ) => {\n\n    return class extends Component {\n        state = {\n            component : null\n        }\n\n        componentDidMount(){\n            importedComponenent()\n            .then( cmp => {\n                // the synamic import statement will return a promise\n                this.setState({ component : cmp.default });\n            })\n        }\n\n        render(){\n\n            let Component = this.state.component\n            // if truthy return component\n            return Component ? <Component {...this.props} /> : null\n        }\n    }\n}\n\nexport default asyncComponent","import React, { Component } from 'react';\nimport { Route , Switch,withRouter, Redirect } from 'react-router-dom';\n// components\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions/index'\nimport asyncComponent from './hoc/asycComponent/asyncComponent'\nimport './App.css';\n\n// load components asyncrynously\nconst asyncCheckout = asyncComponent( () => {\n  return import('./containers/Checkout/Checkout')\n})\n\nconst asyncOrders = asyncComponent( () => {\n  return import('./containers/Orders/Orders')\n})\n\nconst asyncAuth = asyncComponent( () => {\n  return import('./containers/Auth/Auth')\n})\n\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.onAutoLogin()\n  }\n\n \n\n  render() {\n\n    let routes =  <Switch>\n                    <Route path=\"/auth\"  component={asyncAuth} />\n                    <Route path=\"/\" exact component={BurgerBuilder} />\n                    <Redirect to=\"/\" />\n                  </Switch>\n\n    if( this.props.isAuthenticated ){\n        routes =  <Switch>\n                    <Route path=\"/checkout\"  component={asyncCheckout} />\n                    <Route path=\"/orders\"  component={asyncOrders} />\n                    <Route path=\"/auth\"  component={asyncAuth} />\n                    <Route path=\"/logout\" component={Logout} />\n                    <Route path=\"/\" exact component={BurgerBuilder} />\n                    <Redirect to=\"/\" />\n                  </Switch>\n    }\n\n    return (\n      <div className=\"App\">\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoLogin : () => dispatch(actions.AuthCheckState())\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated : state.auth.token !== null\n  }\n\n}\n\nexport default withRouter(connect( mapStateToProps , mapDispatchToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nexport const updateObject = ( oldstate , updatedPropertes ) => {\n    return {\n        ...oldstate,\n        ...updatedPropertes\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility'\n\nconst PRICES = {\n    cheese : 2.50,\n    meat : 14.50,\n    salad : 3.50,\n    bacon : 7.50\n}\n\nconst initialState = {\n    totalPrice : 4,\n    ingredients : [],\n    error : null,\n    building : false\n}\n\nconst Reducer = ( state = initialState , action ) => {\n    switch( action.type ){\n        case actionTypes.ADD_INGREDIENT:\n            const updatedProperties = {\n                ingredients :{\n                    ...state.ingredients,\n                    [action.ingredientName] : state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice : state.totalPrice + PRICES[action.ingredientName],\n                building : true\n            }\n\n            return updateObject(state, updatedProperties)\n        case actionTypes.REMOVE_INGREDIENT: \n            const updatedRemoveProperties = {\n                ingredients :{\n                    ...state.ingredients,\n                    [action.ingredientName] : state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice : state.totalPrice - PRICES[action.ingredientName],\n                building : true\n            }\n\n            return updateObject(state, updatedRemoveProperties)\n        case actionTypes.SET_INGREDIENTS :\n            const ingredients = {\n                salad : action.ingredients.salad,\n                cheese : action.ingredients.cheese,\n                bacon : action.ingredients.bacon,\n                meat : action.ingredients.meat,\n                building : false\n            }\n\n            const updatedSetProperties = {\n                ingredients : ingredients,\n                totalPrice : 4,\n                error : false\n            }\n\n            return updateObject( state ,updatedSetProperties )\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            const updatedErrorProperties = {error : true }\n            return updateObject( state , updatedErrorProperties )\n        default :\n            return state\n    }\n}\n\nexport default Reducer","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject} from '../utility'\n\nconst initialState = {\n    loading : false ,\n    orders : [],\n    purchased : false,\n    error : false\n}\n\n// just lazy to do the other cases but iv put thi functio here so i remember the idea\nconst initPurchase = (action , state ) => {\n    return updateObject( state , {purchased : false} )\n}\n\nconst ruducer = ( state = initialState , action ) => {\n    switch( action.type ){\n        case actionTypes.PURCHASE_INIT: \n            return initPurchase(action , state)\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject( state , {loading : true} )\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = updateObject({...action.orderData},{ id : action.orderID })\n            const updatedProperties = { loading : false, purchased : true, orders : state.orders.concat( newOrder )}\n            return updateObject( state , updatedProperties )\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject( state , {loading: false})\n        case actionTypes.FETCH_ORDER_START: \n            return updateObject( state , {loading: true})\n        case actionTypes.FETCH_ORDER_SUCCESS:  \n            return updateObject( state , {loading: false, orders: action.orders})\n        case actionTypes.FETCH_ORDER_FAIL: \n            return updateObject( state , {loading: false, orders: action.error})\n        default :\n            return state\n    }\n}\n\nexport default ruducer","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../utility'\n\nconst initailState = {\n    error : null,\n    userId : '',\n    token : null,\n    loading : false,\n    redirectPath: '/'\n}\n\nconst authStart = (state , action) => {\n    return updateObject( state , { loading : true } )\n}\n\nconst authSuccess = ( state , action ) => {\n    return updateObject( state ,{  \n                                    token : action.idToken ,\n                                    userId: action.userId ,\n                                    error: null ,\n                                    loading : false \n                                } )\n}\n\nconst authFail = ( state , action ) => {\n    return updateObject( state , { error : action.error,loading :false } )\n}\n\nconst authLogout = ( state , action ) => {\n    return updateObject( state , { userId : null , token : null })\n}\n\nconst authRedirectPath = ( state , action ) => {\n    return updateObject( state , { redirectPath : action.redirectPath})\n}\n\n// below are all the actionTypes that we check for in this reducer\nconst reducer = ( state = initailState , action ) => {\n    switch( action.type ){\n        case actionTypes.AUTH_START: return authStart( state , action )\n        case actionTypes.AUTH_SUCCESS : return authSuccess( state , action )\n        case actionTypes.AUTH_LOGOUT : return authLogout( state , action )\n        case actionTypes.AUTH_FAIL: return authFail( state , action )\n        case actionTypes.AUTH_SET_REDIRECT_PATH: return authRedirectPath( state , action )\n        default : return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware , compose, combineReducers } from 'redux'\nimport { Provider} from 'react-redux'\n\nimport burgerBuilder from './store/reducers/burgerBuilder'\nimport order from './store/reducers/order'\nimport auth from './store/reducers/auth'\nimport thunk from 'redux-thunk';\n\n// because we will be handling asyncronous using redux-thunk we will go for the advanced setup\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder :burgerBuilder, \n  order : order,\n  auth\n})\n\nconst store = createStore( rootReducer, composeEnhancers( applyMiddleware(thunk)) )\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}