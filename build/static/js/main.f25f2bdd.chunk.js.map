{"version":3,"sources":["store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","hoc/aux/aux.js","components/UI/Button/Button.js","components/UI/Spinner/Spinner.js","axios/axiosOrders.js","hoc/withErrorHandler/withErrorHandler.js","components/Burger/Burgeringredient/BurgerIngredient.js","components/Burger/Burger.js","assests/images/burger-logo.png","components/UI/Logo/Logo.js","components/Navigation/SideDrawer/SideDrawerToggle/SideDrawerToggle.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BuildControl/BuildControl.js","components/Burger/BurgerControls/BurgerControls.js","components/UI/OrdersSummary/OrderSummary.js","components/UI/AlertMessage/AlertMessage.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Auth/Logout/Logout.js","hoc/asycComponent/asyncComponent.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["REMOVE_INGREDIENT","ADD_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_FAIL","PURCHASE_BURGER_SUCCESS","PURCHASE_INIT","FETCH_ORDER_START","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_SET_REDIRECT_PATH","CLEAR_ORDER_SUCCESS","ENABLE_ORDER_ALERT","addIngredient","value","type","actionTypes","ingredientName","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","message","errorMessage","clearOrderSuccess","enableOrderAlert","purchaseBurger","orderData","token","axiosOrders","post","purchaseBurgerSuccess","setTimeout","purchaseBurgerFail","id","orderID","orderSuccess","fetchOrders","userId","fetchOrdersStart","queryParams","orders","key","push","Id","fetchOrdersSuccess","err","fetchOrdersFail","Authenticate","email","password","isSignUp","AuthStart","authData","returnSecureToken","url","process","axois","experationDate","Date","getTime","expiresIn","localStorage","setItem","idToken","localId","CheckAuthTimeout","AuthSuccess","console","log","JSON","stringify","AuthFail","authSetRedirectPath","path","redirectPath","Logout","removeItem","timePeriod","AuthCheckState","getItem","backdrop","props","show","className","onClick","clicked","Modal","this","orderClicked","style","width","height","transform","opacity","children","Component","aux","button","disabled","buttonclass","join","spinner","ordersInstance","create","baseURL","mode","headers","withErrorHandler","WrappedComponent","errorAcknowledgedHandler","setState","didError","state","interceptors","request","use","req","res","eject","reqInterceptor","resInterceptor","border","backgroundColor","BurgerIngredient","burgerIngredient","Burger","burgerIngredients","Object","keys","map","ingredientKey","Array","_","i","flat","noIgredients","fontSize","module","exports","logo","src","BurgerLogo","alt","sideDrawerToggle","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","isAuthenticated","toolbar","showdrawer","SideDrawer","attachedClasses","open","Backdrop","sideDrawerClick","Layout","showSideDrawer","sideDrawerCloseHandler","sideDrawerToggleHandler","prevState","connect","auth","buildControl","label","remove","add","controls","BurgerControls","price","ctrl","ingredientAdded","ingredientsRemoved","disabledInfo","purchasable","ordered","isAuthenticate","igKey","textTransform","totalprice","Button","continued","canceled","AlertMessage","timeup","hideAlertMessage","duration","miliseconds","Number","alertmessage","classes","BurgerBuilder","totalPrice","purchased","showAlert","updatePurchasableHandler","reduce","sum","el","handlePurchase","onAuthRedirectPath","history","handlePurchaseCanceled","handlePurchaseContinued","onInitIngredients","window","scrollTo","alertMsg","ingred","burger","Spinner","orderSummary","toFixed","onIngredientAdded","onIngredientRemoved","loading","burgerBuilder","order","ingredName","actions","onEnableOrderAlert","onClearOrderSuccess","onLogout","asyncComponent","importedComponenent","component","cmp","default","asyncCheckout","asyncOrders","asyncAuth","App","onAutoLogin","ORDERS_URL","routes","withRouter","Boolean","location","hostname","match","updateObject","oldstate","updatedPropertes","PRICES","cheese","meat","salad","bacon","initialState","building","Reducer","action","updatedProperties","updatedRemoveProperties","updatedSetProperties","updatedErrorProperties","initPurchase","ruducer","newOrder","concat","initailState","authStart","authSuccess","authFail","authLogout","authRedirectPath","reducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f25f2bdd.chunk.js","sourcesContent":["export const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\"\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\"\nexport const INCREASE_PRICE = \"INCREASE_PRICE\"\nexport const DECREASE_PRICE = \"DECREASE_PRICE\"\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\"\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\"\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\"\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\"\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\"\nexport const PURCHASE_INIT = \"PURCHASE_INIT\"\nexport const FETCH_ORDER_START = \"FETCH_ORDER_START\"\nexport const FETCH_ORDER_SUCCESS = \"FETCH_ORDER_SUCCESS\"\nexport const FETCH_ORDER_FAIL = \"FETCH_ORDER_FAIL\"\nexport const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\"\nexport const AUTH_SET_REDIRECT_PATH = \"AUTH_SET_REDIRECT_PATH\"\nexport const CLEAR_ORDER_SUCCESS = \"CLEAR_ORDER_SUCCESS\"\nexport const ENABLE_ORDER_ALERT = \"ENABLE_ORDER_ALERT\"","import * as actionTypes from './actionTypes'\nimport axios from 'axios'\n\nexport const addIngredient = (value) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName : value\n    }\n}\n\nexport const removeIngredient = (value) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName : value\n    }\n}\n\nexport const fetchIngredientsFailed = (message) => {\n    return {\n        type : actionTypes.FETCH_INGREDIENTS_FAILED,\n        errorMessage : message\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type : actionTypes.SET_INGREDIENTS,\n        ingredients : ingredients\n    }\n}\n// asycronous Ingredient action creator\nexport const initIngredients = () => {\n    return dispatch  => {\n        axios.get('https://react-burger-bead9.firebaseio.com/ingredients.json')\n        .then( response => {\n            dispatch( setIngredients(response.data) )\n        })\n        .catch( error => {\n            dispatch( fetchIngredientsFailed(error) )\n        })\n    }\n}\n","import axiosOrders from '../../axios/axiosOrders'\nimport * as actionTypes from '../actions/actionTypes'\n\n\n// will wait 6 seconds before clearing the success state for the oredr\n// this will disable the alert message\nexport const clearOrderSuccess = () => {\n    return {\n        type : actionTypes.CLEAR_ORDER_SUCCESS\n    }\n}\n\nexport const enableOrderAlert = () => {\n    return {\n        type : actionTypes.ENABLE_ORDER_ALERT\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type : actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type : actionTypes.PURCHASE_BURGER_START\n    }\n}\n\n\n// asyncronous Order Action creators\nexport const  purchaseBurger = (orderData , token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() )\n        axiosOrders.post( \"orders.json?auth=\" + token, orderData )\n        .then( response => {\n            dispatch(purchaseBurgerSuccess(response.data , orderData))\n            dispatch(purchaseInit())\n            setTimeout(() => dispatch(clearOrderSuccess()), 2000) // wait 2 seconds before clearing Order Success\n        })\n        .catch( error => {\n            dispatch( purchaseBurgerFail(error) )\n        })\n    }\n}\n// syncronous Order action creator\nexport const purchaseBurgerSuccess = ( id , orderData ) => {\n\n    return {\n        type : actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderID : id,\n        orderData : orderData,\n        orderSuccess : true\n    }\n}\n// sycronous \nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type : actionTypes.PURCHASE_BURGER_FAIL,\n        error : error\n    }\n}\n\n// Action creators for the Orders page\nexport const fetchOrders = ( token , userId ) => {\n    return dispatch => { \n        dispatch( fetchOrdersStart() )\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\n        axiosOrders.get( 'orders.json' + queryParams )\n        .then( response => {\n            // reponse.data = { key{ key : data} , key{ key : data} }\n            const orders = [];\n            for(let key in response.data){\n                orders.push({\n                Id :key,\n                ...response.data[key]\n                });\n            }\n            dispatch( fetchOrdersSuccess(orders) )\n        })\n        .catch( err => {\n            dispatch( fetchOrdersFail(err) )\n        })\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDER_START\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDER_SUCCESS,\n        orders : orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type : actionTypes.FETCH_ORDER_FAIL,\n        error : error\n    }\n}\n","import * as actionTypes from '../actions/actionTypes'\nimport axois from 'axios'\n\nexport const Authenticate = ( email , password , isSignUp ) => {\n    return dispatch => {\n        dispatch( AuthStart() )\n        const authData = {\n            email,\n            password,\n            returnSecureToken : true\n        }\n        // conditional URL \n        let url = process.env.REACT_APP_SIGNUP_URL\n        if( !isSignUp ) url = process.env.REACT_APP_SIGNIN_URL\n        // authenticate\n        axois.post( url , authData )\n        .then( response => {\n            const experationDate = new Date( new Date().getTime() + response.data.expiresIn * 1000)\n            localStorage.setItem('experationDate', experationDate)\n            localStorage.setItem('token', response.data.idToken)\n            localStorage.setItem('userId', response.data.localId)\n\n            dispatch( CheckAuthTimeout( response.data.expiresIn ) )\n            dispatch( AuthSuccess(response.data.idToken , response.data.localId) )\n        } )\n        .catch( (error) => {\n            console.log(error)\n            if(error.response){\n                localStorage.setItem( \"Auth Error : \" ,JSON.stringify(error.response))\n                dispatch( AuthFail(error.response.data.error.message))\n            }else{\n                dispatch( AuthFail(isSignUp ? \"Error Signing Up\" :\"Error Signing In\"))\n            }\n        })\n    }\n}\n\nexport const authSetRedirectPath = ( path ) => {\n    return {\n        type : actionTypes.AUTH_SET_REDIRECT_PATH,\n        redirectPath : path\n    }\n}\n\nexport const Logout = () => {\n    localStorage.removeItem('token')\n    localStorage.removeItem('experationDate')\n    localStorage.removeItem('userId')\n\n    return {\n        type : actionTypes.AUTH_LOGOUT,\n    }\n}\n\nexport const CheckAuthTimeout = ( timePeriod ) => {\n    return dispatch => {\n            setTimeout(  \n                () => dispatch( Logout() ) \n                , timePeriod * 1000)\n        } \n}\n\nconst AuthStart = () => { \n    return {\n        type : actionTypes.AUTH_START\n    }\n}\n\nconst AuthSuccess = ( idToken , userId ) => { \n    return {\n        type : actionTypes.AUTH_SUCCESS,\n        userId : userId,\n        idToken : idToken\n    }\n}\n\nconst AuthFail = ( error ) => { \n    return {\n        type : actionTypes.AUTH_FAIL,\n        error : error\n    }\n}\n\nexport const AuthCheckState = ( ) => {\n    return dispatch => {\n        const token = localStorage.getItem('token')\n        if( !token ){\n            dispatch( Logout() )\n        }else{\n            const userId = localStorage.getItem('userId')\n            const experationDate = new Date(localStorage.getItem('experationDate'))\n            if( experationDate <= new Date() ){\n                dispatch( Logout() )\n            }else{\n                dispatch( AuthSuccess( token, userId ) )\n                // the difference will be the expiry Date\n                dispatch( CheckAuthTimeout(experationDate.getTime() - new Date().getTime() / 1000 ) )\n            }\n    \n        }\n    }\n}","import React from 'react';\nimport './Backdrop.css';\n\nconst backdrop = (props) =>  (\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React,{Fragment, Component} from 'react';\nimport Backdrop from '../Backdrop/Backdrop';\nimport './Modal.css';\n\n\nclass Modal extends Component {\n    \n    // shouldComponentUpdate( nextProps , nextState){\n    //     return this.props.show !== nextProps.show || this.props.children !== nextProps.children\n    // }\n\n    componentDidUpdate(){\n        \n    }\n\n    render(){\n        return(\n            <Fragment>\n                <Backdrop  show={this.props.show} clicked={this.props.orderClicked}/>\n                <div className=\"Modal\" style={{ \n                                        width : this.props.width ,\n                                        height: this.props.height,\n                                        transform: this.props.show ? 'translateY(0)' : 'translateY(-150vh)',\n                                        opacity : this.props.show ? '1': '0'\n                                    }}>\n                {this.props.children}\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default Modal;\n    ","\nconst aux = (props) => { \n    return props.children;\n}\n\nexport default aux;","import React from 'react';\nimport './Button.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[\"Button\" ,props.buttonclass].join(\" \")}\n        style={{ width: props.width }}\n        onClick={props.clicked}>\n        {props.children}\n    </button>\n);\n\nexport default button;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"Loader\"> </div>\n);\n\nexport default spinner;","import axios from 'axios';\n\nconst ordersInstance = axios.create({\n    baseURL : process.env.REACT_APP_ORDERS_URL,\n    mode: 'no-cors',\n    headers: { \n        'Access-Control-Allow-Origin' : '*'\n      }\n});\n\nexport default ordersInstance;\n\n","import React, { Component } from 'react';\nimport Aux from '../aux/aux';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent,axios) => {\n    return class extends Component{\n        constructor(props){\n            super(props);\n            this.state = {\n                error : null,\n                didError : false\n            }\n        }\n\n        componentWillMount() {\n            // the request must return something\n            axios.interceptors.request.use( req => {\n                this.setState({error: null , didError : false});\n                return req;\n            });\n            // the response must return something\n             axios.interceptors.response.use( res => res , err => {\n                this.setState({error:err, didError: true});\n            });\n        }\n        // now to prevent creating multiple interceptors and stop memory leaks \n        // we are going to eject the once the compoenent we wrap is unmounted\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorAcknowledgedHandler = () => {\n            this.setState({error : null, didError: false});\n        }\n\n        render(){\n            return (\n                <Aux style={{height: '100%' , border : 'solid 1px red', backgroundColor: 'salmon'}}>\n                    <Modal \n                        height=\"10%\" \n                        width=\"70%\" \n                        show={this.state.didError} \n                        orderClicked={this.errorAcknowledgedHandler}>\n                    {this.state.didError ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n            );\n        };\n    }\n}\n\nexport default withErrorHandler;","import React, {Component} from 'react';\nimport './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n\n    render(){\n        let burgerIngredient = null;\n        switch(this.props.type){\n            case('cheese'):\n                burgerIngredient = <div className=\"Cheese\"></div>;\n                break;\n            case('meat'):\n                burgerIngredient = <div className=\"Meat\"></div>;\n                break;\n            case('salad'):\n                burgerIngredient = <div className=\"Salad\"></div>;\n                break;\n            case('bacon'):\n                burgerIngredient = <div className=\"Bacon\"></div>;\n                break;\n            case('bread-bottom'):\n                burgerIngredient = <div className=\"BreadBottom\"></div>;\n                break;\n            case('bread-top'):\n                burgerIngredient =  <div className=\"BreadTop\">\n                                        <div className=\"Seeds1\"></div>\n                                        <div className=\"Seeds2\"></div> \n                                    </div>;\n                break;\n            default :\n                burgerIngredient = null;\n        }\n\n        return burgerIngredient;\n    }\n\n   \n}\n\nBurgerIngredient.propTypes = {\n    type : PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React, { Component } from 'react';\nimport BurgerIngredient from './Burgeringredient/BurgerIngredient';\nimport './Burger.css';\n\n\nclass Burger extends Component {\n    componentDidMount(){\n        console.log(\"Enviromnet :\" ,process.env.REACT_APP_ORDERS_URL)\n        console.log(\"Enviromnet :\" ,process.env.REACT_APP_IGREDIENTS_URL)\n    }\n\n    render(){\n        let burgerIngredients = Object.keys(this.props.ingredients).map(\n            ingredientKey =>  [...Array(this.props.ingredients[ingredientKey])].map(\n                (_,i) => {\n                    return <BurgerIngredient type={ingredientKey} key={ ingredientKey + i }/>\n                }\n            )).flat(); // flatten nested array to do length check\n\n        // logic to deal with the ingredients from the server on initialisation\n        let noIgredients = true;\n        for( let ingredientKey in this.props.ingredients){\n            if( this.props.ingredients[ingredientKey] > 0){\n                noIgredients = false;\n                break;\n            }\n        }\n\n        let orderSuccess = null\n        if( this.props.orderSuccess ) orderSuccess = <p>Successful Order</p>\n        // check if there were ingredient from returned the serevr if not display a message\n        burgerIngredients = noIgredients ? <div>Please select an Ingredient</div> : burgerIngredients;\n\n        return(\n            <div className=\"Burger\">\n                {orderSuccess && <span style={{ fontSize : '40px'}}>Succesfull Order</span>}\n                <BurgerIngredient type=\"bread-top\"/>\n                {burgerIngredients}\n                <BurgerIngredient type=\"bread-bottom\"/> \n            </div>\n        )\n    }\n}\n\nexport default Burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from  'react';\nimport BurgerLogo from '../../../assests/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className=\"BurgerLogo\">\n        <img src={BurgerLogo} alt=\"BurgerLogo\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport './SideDrawerToggle.css';\n\nconst sideDrawerToggle = (props) => (\n    <div className=\"SideDrawerToggle\" onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\n\nexport default sideDrawerToggle;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport './NavigationItem.css';\n\n// the to prop determins what link has the active property \n// and if the link has that class the styles are activated by the css\nconst NavigationItem = (props) => (\n    <li className=\"NavigationItem\">\n        <NavLink to={props.link} exact\n                 activeClassName={props.active}>\n              {props.children}\n        </NavLink>\n    </li>\n);\n\nexport default NavigationItem;","import React from 'react';\nimport NavigationItem from '../NavigationItem/NavigationItem';\nimport './NavigationItems.css';\n\nconst NavigationItems = (props) => (\n    <ul className=\"NavigationItems\">\n        <NavigationItem link=\"/\" >Burger Builder</NavigationItem>\n        {\n            props.isAuthenticated ? \n            <NavigationItem  link=\"/orders\" >Orders</NavigationItem> :\n            null \n        }\n        {\n            props.isAuthenticated ?\n            <NavigationItem  link=\"/logout\">Logout</NavigationItem> :\n            <NavigationItem  link=\"/auth\">Authenticate</NavigationItem> \n        }\n        \n    </ul>\n);\n\nexport default NavigationItems;","import React from 'react';\nimport BurgerLogo from '../../UI/Logo/Logo';\nimport SideDrawerToggle from '../SideDrawer/SideDrawerToggle/SideDrawerToggle';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './Toolbar.css';\n\nconst toolbar = (props) => (\n    <div className=\"Toolbar\">\n        <SideDrawerToggle clicked={props.showdrawer}/>\n        <div className=\"ToolBarLogo\">\n            <BurgerLogo />\n        </div>\n        <nav className=\"DesktopOnly\">\n            <ul>\n                <NavigationItems  isAuthenticated={props.isAuthenticated} />\n            </ul>\n        </nav>\n    </div>\n);\n\nexport default toolbar;","import React ,{Fragment}from 'react';\nimport Logo from '../../UI/Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport './SideDrawer.css';\n\nconst SideDrawer = (props) => {\n    // conditional css\n    const attachedClasses = props.open ? [\"SideDrawer\",\"Open\"] : [\"SideDrawer\",\"Close\"];\n    return (\n        <Fragment>\n            <Backdrop show={props.open} clicked={props.sideDrawerClick}/>\n            <div className={attachedClasses.join(\" \")} onClick={props.sideDrawerClick}>\n                <div className=\"SideDrawerLogo\">\n                    <Logo/>\n                </div>\n                <nav>\n                    <NavigationItems  isAuthenticated={props.isAuthenticated}/>\n                </nav>\n            </div>\n        </Fragment> \n    );\n}\n\nexport default SideDrawer;","import React , {Fragment, Component } from 'react';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\nimport { connect } from 'react-redux'\nimport  './Layout.css';\n\nclass Layout extends Component{\n    state ={\n        showSideDrawer : false\n    }\n\n    sideDrawerCloseHandler = () => {\n        this.setState({ showSideDrawer :false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer : !prevState.showSideDrawer }\n        });\n    }\n\n    render(){\n        return (\n            <Fragment>\n            <Toolbar\n                showdrawer={this.sideDrawerToggleHandler}\n                 isAuthenticated={this.props.isAuthenticated} />\n\n                <SideDrawer \n                    open={this.state.showSideDrawer} \n                    sideDrawerClick={this.sideDrawerCloseHandler}\n                    isAuthenticated={this.props.isAuthenticated} />\n\n                <main className=\"Content\">\n                    {this.props.children}\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated : state.auth.token !== null\n    }\n}\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\nimport './BuildControl.css';\n\n\nconst buildControl = (props) => {\nreturn (\n    <div className=\"BuildControl\">\n        <div className=\"Label\">{props.label}</div>\n        <button \n            className=\"Less\"\n            onClick={props.remove}\n            disabled={props.disabled}>Less\n        </button>\n        <button \n            className=\"More\"\n            onClick={props.add}>More\n        </button>\n    </div>    \n    );\n}\n\nexport default buildControl;","import React from 'react';\nimport './BurgerControls.css';\nimport BurgerControl from '../BuildControl/BuildControl';\n\nconst controls = [\n    {label : \"Meat\" , type : \"meat\"},\n    {label : \"Cheese\" , type : \"cheese\"},\n    {label : \"Bacon\" , type : \"bacon\"},\n    {label : \"Salad\" , type : \"salad\"}\n]\n\nconst BurgerControls = (props) =>  {\n\n        return (\n            <div className=\"BuildControls\">\n                <p> Burger Price :<strong>{ \"R \"  + props.price}</strong></p>\n                {controls.map( ctrl => <BurgerControl\n                                            add={() => props.ingredientAdded(ctrl.type)}\n                                            remove={() => props.ingredientsRemoved(ctrl.type)} \n                                            disabled={props.disabledInfo[ctrl.type]}\n                                            label={ctrl.label} \n                                            key={ctrl.label}/> )}\n                <button className=\"OrderButton\"\n                    disabled={!props.purchasable}\n                    onClick={props.ordered}>\n                        {props.isAuthenticate ? 'ORDER NOW' : 'SIGN IN TO ORDER'}\n                </button>                            \n            </div>\n            \n        );  \n}\n\nexport default BurgerControls;","import React from 'react';\nimport './OrderSummary.css';\nimport Button from '../Button/Button';\n\n\nconst backdrop = (props) => {\n\n    const ingredients = Object.keys(props.ingredients)\n    .map( igKey => {\n        return  <li className=\"ListItem\" key={igKey}>\n                    <span className=\"Span\" style={{textTransform: \"capitalize\"}}>{igKey}</span> :{props.ingredients[igKey]}\n                </li>;\n    })\n\n    return (\n        <div>\n            <h3>Order Summary</h3>\n            <p>Delicious Burger Containing the following ingredients</p>\n            <ul>\n                {ingredients}\n            </ul>\n            <p><strong>Total Price : {props.totalprice}</strong></p>\n            <p>Continue to checkout ?</p>\n            <Button \n                className=\"Button\"\n                width=\"70px\" \n                buttonclass=\"Success\"\n                clicked={props.continued}>Yes\n            </Button>\n            <Button\n                className=\"Button\"\n                width=\"70px\"\n                buttonclass=\"Danger\"\n                clicked={props.canceled}>Cancel\n            </Button>\n        </div>\n    );\n}\n\nexport default backdrop;","import React, { Component } from 'react';\nimport './AlertMessage.css';\n\nclass AlertMessage extends Component {\n    state = {\n        timeup : false\n    }\n\n    componentDidMount() {\n       this.hideAlertMessage(this.props.duration);\n    }\n\n    // hideAlertMessage is responsible for hiding the alert message\n    // the duration(seconds) prop must be passed to the Alert Component\n    // propType = s[ string or number ]\n    hideAlertMessage = (duration) => {\n        // TODO : rather change the class to hide the message\n        const miliseconds = Number(duration) * 1000\n        setTimeout( () => this.setState({timeup: true}), miliseconds);\n    }\n\n    render(){\n        let alertmessage= <div className={this.props.classes}>\n                                {this.props.message}\n                            </div>;\n\n        if(this.state.timeup){\n            alertmessage = null;\n        }\n\n        return (\n            <div className={\"AlertMessage \"}>\n                {alertmessage}\n            </div>\n        );\n    }\n    \n}\n\nexport default AlertMessage;","import React ,{Component} from'react';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BurgerControls/BurgerControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrdersSummary from '../../components/UI/OrdersSummary/OrderSummary';\nimport axios from 'axios';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index'\nimport Aux from '../../hoc/aux/aux';\nimport AlertMessage from '../../components/UI/AlertMessage/AlertMessage';\nimport {connect} from 'react-redux';\nimport './BurgerBuilder.css';\n// exporting the class without the connection to redux for testing purposes\nexport class BurgerBuilder extends Component {\n    state = {\n        totalPrice : 4,\n        purchasable : false,\n        purchased : false,\n        showAlert : false\n    }\n    \n    componentDidMount() {\n        this.props.onInitIngredients()\n        window.scrollTo(0,0)\n        // if(this.props.orderSuccess){\n        //     this.props.onEnableOrderAlert()\n        // }\n    }\n\n    updatePurchasableHandler = (ingredients) => {\n        const sum =  Object.keys(ingredients)\n                            .map( igKey => {\n                                return ingredients[igKey];\n                            })\n                            .reduce((sum , el) => {\n                                return sum + el;\n                            },0)\n        // we cater for the HTML disabled attribute \n        return sum > 0 \n        \n    }\n\n    \n    handlePurchase = () => {\n        if( this.state.handlePurchase ){\n            this.setState({purchased : true});\n        }else{\n            this.props.onAuthRedirectPath('/checkout')\n            this.props.history.push('/auth')\n        }\n        \n    }\n\n    handlePurchaseCanceled = () => {\n        this.setState({purchased : false});\n    }\n\n    handlePurchaseContinued = () => {   \n        this.props.history.push('/checkout');\n    }\n\n    render(){\n        let alertMsg = null;\n        if(this.props.orderSuccess){\n            alertMsg = <AlertMessage \n                            duration=\"5\"\n                            message=\"Order Saved Successfully\"\n                            classes=\"AlertMessageSuccess\" />\n        }\n      \n        // for the less and more Buttons\n        const disabledInfo = {...this.props.ingred}\n\n        for(let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        // prefer to handle null ingredients before we get the ingredients from firebase here \n        // its better than doing in in another components\n        let burger = this.props.error ? <p>Error fetching Ingredients</p> :<Spinner />;\n        \n        let orderSummary = null\n        if( this.props.ingred ){\n            burger= (<Aux>\n                        <Burger \n                            ingredients={this.props.ingred} />\n                        <BurgerControls\n                            isAuthenticate={this.props.isAuthenticate}\n                            price={this.props.price.toFixed(2)}\n                            purchasable={this.updatePurchasableHandler(this.props.ingred)} \n                            disabledInfo={disabledInfo} \n                            ingredientAdded={this.props.onIngredientAdded} \n                            ingredientsRemoved={this.props.onIngredientRemoved}\n                            ordered={this.handlePurchase} />\n                    </Aux>);\n                    \n            orderSummary = <OrdersSummary\n                                continued={this.handlePurchaseContinued}\n                                canceled={this.handlePurchaseCanceled} \n                                ingredients={this.props.ingred}\n                                totalprice={this.props.price.toFixed(2)} />;\n        }\n           \n        if (this.state.loading) orderSummary = <Spinner />;\n        \n        return(\n            <div className=\"BurgerBuilder\">\n                {alertMsg}\n                <Modal  \n                    width=\"60%\" \n                    show={this.state.purchased} \n                    orderClicked={this.handlePurchaseContinued}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ingred : state.burgerBuilder.ingredients ,\n        price : state.burgerBuilder.totalPrice ,\n        error : state.burgerBuilder.error,\n        isAuthenticate : state.auth.token !== null,\n        orderSuccess : state.order.orderSuccess\n    }\n}\n\nconst mapActionsToProps = dispatch => {\n    return {\n        onIngredientAdded : (ingredName) => dispatch( actions.addIngredient(ingredName)),\n        onIngredientRemoved : (ingredName) => dispatch( actions.removeIngredient(ingredName)),\n        onInitIngredients : () => dispatch( actions.initIngredients() ),\n        onAuthRedirectPath : (path) => dispatch( actions.authSetRedirectPath( path )),\n        onEnableOrderAlert : () => dispatch( actions.enableOrderAlert()),\n        onClearOrderSuccess : () => dispatch( actions.clearOrderSuccess())\n     \n    }\n}\n\nexport default connect(mapStateToProps,mapActionsToProps)(withErrorHandler(BurgerBuilder,axios));","import React ,{ Component} from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport * as actions from '../../../store/actions/index'\n\n\nclass Logout extends Component {\n\n    componentDidMount(){\n        this.props.onLogout()\n    }\n\n    render(){\n        return <Redirect to=\"/auth\" />\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout : () => dispatch( actions.Logout())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(Logout)","import React, { Component } from 'react'\n\nconst  asyncComponent = ( importedComponenent ) => {\n\n    return class extends Component {\n        state = {\n            component : null\n        }\n\n        componentDidMount(){\n            importedComponenent()\n            .then( cmp => {\n                // the synamic import statement will return a promise\n                this.setState({ component : cmp.default });\n            })\n        }\n\n        render(){\n\n            let Component = this.state.component\n            // if truthy return component\n            return Component ? <Component {...this.props} /> : null\n        }\n    }\n}\n\nexport default asyncComponent","import React, { Component } from 'react';\nimport { Route , Switch,withRouter, Redirect } from 'react-router-dom';\n// components\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Logout from './containers/Auth/Logout/Logout'\nimport { connect } from 'react-redux'\nimport * as actions from './store/actions/index'\nimport asyncComponent from './hoc/asycComponent/asyncComponent'\nimport './App.css';\n\n// load components asyncrynously\nconst asyncCheckout = asyncComponent( () => {\n  return import('./containers/Checkout/Checkout')\n})\n\nconst asyncOrders = asyncComponent( () => {\n  return import('./containers/Orders/Orders')\n})\n\nconst asyncAuth = asyncComponent( () => {\n  return import('./containers/Auth/Auth')\n})\n\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.onAutoLogin()\n    console.log(\"process Enviromnet :\" ,process.env.ORDERS_URL)\n    console.log(\"React Enviromnet :\" )\n  }\n\n \n\n  render() {\n\n    let routes =  <Switch>\n                    <Route path=\"/auth\"  component={asyncAuth} />\n                    <Route path=\"/\" exact component={BurgerBuilder} />\n                    <Redirect to=\"/\" />\n                  </Switch>\n\n    if( this.props.isAuthenticated ){\n        routes =  <Switch>\n                    <Route path=\"/\" exact component={BurgerBuilder} />\n                    <Route path=\"/checkout\" component={asyncCheckout} />\n                    <Route path=\"/orders\"  component={asyncOrders} />\n                    <Route path=\"/auth\"  component={asyncAuth} />\n                    <Route path=\"/logout\" component={Logout} />\n                    <Redirect to=\"/\" />\n                  </Switch>\n    }\n\n    return (\n      <div className=\"App\">\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoLogin : () => dispatch(actions.AuthCheckState())\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated : state.auth.token !== null\n  }\n\n}\n\nexport default withRouter(connect( mapStateToProps , mapDispatchToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nexport const updateObject = ( oldstate , updatedPropertes ) => {\n    return {\n        ...oldstate,\n        ...updatedPropertes\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility'\n\nconst PRICES = {\n    cheese : 2.50,\n    meat : 14.50,\n    salad : 3.50,\n    bacon : 7.50\n}\n\nconst initialState = {\n    totalPrice : 4,\n    ingredients : [],\n    error : null,\n    building : false\n}\n\nconst Reducer = ( state = initialState , action ) => {\n    switch( action.type ){\n        case actionTypes.ADD_INGREDIENT:\n            const updatedProperties = {\n                ingredients :{\n                    ...state.ingredients,\n                    [action.ingredientName] : state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice : state.totalPrice + PRICES[action.ingredientName],\n                building : true\n            }\n\n            return updateObject(state, updatedProperties)\n        case actionTypes.REMOVE_INGREDIENT: \n            const updatedRemoveProperties = {\n                ingredients :{\n                    ...state.ingredients,\n                    [action.ingredientName] : state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice : state.totalPrice - PRICES[action.ingredientName],\n                building : true\n            }\n\n            return updateObject(state, updatedRemoveProperties)\n        case actionTypes.SET_INGREDIENTS :\n            const ingredients = {\n                salad : action.ingredients.salad,\n                cheese : action.ingredients.cheese,\n                bacon : action.ingredients.bacon,\n                meat : action.ingredients.meat,\n                building : false\n            }\n\n            const updatedSetProperties = {\n                ingredients : ingredients,\n                totalPrice : 4,\n                error : false\n            }\n\n            return updateObject( state ,updatedSetProperties )\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n            const updatedErrorProperties = {error : true }\n            return updateObject( state , updatedErrorProperties )\n        default :\n            return state\n    }\n}\n\nexport default Reducer","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject} from '../utility'\n\nconst initialState = {\n    loading : false ,\n    orders : [],\n    purchased : false,\n    error : false,\n    orderSuccess: null\n}\n\n// just lazy to do the other cases but iv put thi functio here so i remember the idea\nconst initPurchase = (action , state ) => {\n    return updateObject( state , {purchased : false} )\n}\n\nconst ruducer = ( state = initialState , action ) => {\n    switch( action.type ){\n        case actionTypes.PURCHASE_INIT: \n            return initPurchase(action , state)\n        case actionTypes.PURCHASE_BURGER_START:\n            return updateObject( state , {loading : true} )\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\n            const newOrder = updateObject({...action.orderData},{ id : action.orderID })\n            const updatedProperties = { loading : false, purchased : true, orders : state.orders.concat( newOrder ),orderSuccess: \"success\"}\n            return updateObject( state , updatedProperties )\n        case actionTypes.PURCHASE_BURGER_FAIL:\n            return updateObject( state , {loading: false})\n        case actionTypes.FETCH_ORDER_START: \n            return updateObject( state , {loading: true})\n        case actionTypes.FETCH_ORDER_SUCCESS:  \n            return updateObject( state , {loading: false, orders: action.orders })\n        case actionTypes.FETCH_ORDER_FAIL: \n            return updateObject( state , {loading: false, orders: action.error})\n        case actionTypes.CLEAR_ORDER_SUCCESS: \n            return updateObject( state , {orderSuccess: null})\n        case actionTypes.ENABLE_ORDER_ALERT : \n            return updateObject( state , {orderSuccess: true})\n        default :\n            return state\n    }\n}\n\nexport default ruducer","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../utility'\n\nconst initailState = {\n    error : null,\n    userId : '',\n    token : null,\n    loading : false,\n    redirectPath: '/'\n}\n\nconst authStart = (state , action) => {\n    return updateObject( state , { loading : true } )\n}\n\nconst authSuccess = ( state , action ) => {\n    return updateObject( state ,{  \n                                    token : action.idToken ,\n                                    userId: action.userId ,\n                                    error: null ,\n                                    loading : false \n                                } )\n}\n\nconst authFail = ( state , action ) => {\n    return updateObject( state , { error : action.error,loading :false } )\n}\n\nconst authLogout = ( state , action ) => {\n    return updateObject( state , { userId : null , token : null })\n}\n\nconst authRedirectPath = ( state , action ) => {\n    return updateObject( state , { redirectPath : action.redirectPath})\n}\n\n// below are all the actionTypes that we check for in this reducer\nconst reducer = ( state = initailState , action ) => {\n    switch( action.type ){\n        case actionTypes.AUTH_START: return authStart( state , action )\n        case actionTypes.AUTH_SUCCESS : return authSuccess( state , action )\n        case actionTypes.AUTH_LOGOUT : return authLogout( state , action )\n        case actionTypes.AUTH_FAIL: return authFail( state , action )\n        case actionTypes.AUTH_SET_REDIRECT_PATH: return authRedirectPath( state , action )\n        default : return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware , compose, combineReducers } from 'redux'\nimport { Provider} from 'react-redux'\n\nimport burgerBuilder from './store/reducers/burgerBuilder'\nimport order from './store/reducers/order'\nimport auth from './store/reducers/auth'\nimport thunk from 'redux-thunk';\n\n// because we will be handling asyncronous using redux-thunk we will go for the advanced setup\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  burgerBuilder :burgerBuilder, \n  order : order,\n  auth\n})\n\nconst store = createStore( rootReducer, composeEnhancers( applyMiddleware(thunk)) )\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}